<%= form_with(model: event, local: true, url: target_url, remote: true, html: { id: 'event-info-form' } ) do |form| %>
  <% if event.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(event.errors.count, "error") %> prohibited this event from being saved:</h2>

      <ul>
      <% event.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-fields">

    <div class="row">
      <div class="col-lg-12"></div>
      <div class="col-lg-2 col-md-12 field-key">
        <%= form.label :year, "Year" %>
      </div>
      <div class="col-lg-10 col-md-12 field-value">
        <%= form.number_field :year, min: 2008, max: 2099, required: true %>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-12"></div>
      <div class="col-lg-2 col-md-12 field-key">
        <%= form.label :title, "Title" %>
      </div>
      <div class="col-lg-10 col-md-12 field-value">
        <%= form.text_field :title, required: true %>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-12"></div>
      <div class="col-lg-2 col-md-12 field-key">
        <%= form.label :subtitle, "Subtitle" %>
      </div>
      <div class="col-lg-10 col-md-12 field-value">
        <%= form.text_field :subtitle %> <br>
      </div>
    </div>
    <%= render "admin/image/image_form", form: form, field: :logo %>
    <div class="row">
      <div class="col-lg-12"></div>
      <div class="col-lg-2 col-md-12 field-key">
        <%= form.label :overview, "Short Description" %>
      </div>
      <div class="col-lg-10 col-md-12 field-value">
        <%= form.text_area :overview, required: true %>
      </div>
    </div>
    <%= form.fields_for :event_info do |event_info_form| %>
      <div class="row">
        <div class="col-lg-12"></div>
        <div class="col-lg-2 col-md-12 field-key">
          <%= event_info_form.label :description, "Full Description" %>
        </div>
        <div class="col-lg-10 col-md-12 field-value">
          <%= event_info_form.hidden_field :description, required: true %>
          <div id="editor-container">
          </div>
          <br>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-12"></div>
        <div class="col-lg-2 col-md-12 field-key">
          <%= event_info_form.label :synopsis %>
        </div>
        <div class="col-lg-10 col-md-12 field-value">
          <%= event_info_form.text_area :synopsis, required: true %>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-12"></div>
        <div class="col-lg-2 col-md-12 field-key">
          <%= event_info_form.label :video_link %>
        </div>
        <div class="col-lg-10 col-md-12 field-value">
          <%= event_info_form.text_field :video_link %>
        </div>
      </div>
    <% end %>
    <div class="row">
      <div class="col-lg-12">
        <%= form.submit 'Submit', class: "submit-button" %>      
      </div>
    </div>
  </div>
  
  <script>
    var toolbarOptions = {
      container: [
        ['bold', 'italic', 'underline'],
        ['link'],
      ],
      handlers: {
        // UI improvements. The original had an ugly-looking input field
        'link': function(value) {
          if (value) {
            var href = prompt('Enter the URL');
            this.quill.format('link', href);
          } else {
            this.quill.format('link', false);
          }
        }
      }
    }

    // Initialises the div with id='editor-container' to be a quill editor, with toolbarOptions specified above
    var quill = new Quill('#editor-container', {
      modules: {
        toolbar: toolbarOptions
      },
      placeholder: 'Insert full description here...',
      theme: 'snow'
    });

    /* If we are editing an event, this code will retrieve the html text from the database that is loaded 
       into the form, and inject it to the quill editor.

       During runtime, the code `event_info_form.hidden_field :description, required: true` gets resolved 
       to have `id="event_event_info_attributes_description"`. For more details, you can read at
       `https://github.com/nuansa-cp/gapura/pull/84#discussion_r302797872`.
    */
    var postContentInput = document.querySelector('#event_event_info_attributes_description');
    quill.root.innerHTML = postContentInput.value

    /* Copied from StackOverflow, but this is the piece of code that allows any changes in html text
       from the quill editor to be injected into the hidden_field: 
       event_info_form.hidden_field :description, required: true
    */ 
    quill.on('text-change', function() {
      $("#event_event_info_attributes_description").val(quill.root.innerHTML);
    });
  </script>
<% end %>
